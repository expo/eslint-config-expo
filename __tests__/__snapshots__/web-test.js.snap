// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`doesn't conflict with Prettier: message 1`] = `
"The following rules are unnecessary or might conflict with Prettier:

- array-bracket-spacing
- arrow-spacing
- block-spacing
- comma-dangle
- comma-spacing
- comma-style
- computed-property-spacing
- dot-location
- eol-last
- flowtype/boolean-style
- flowtype/delimiter-dangle
- flowtype/generic-spacing
- flowtype/object-type-delimiter
- flowtype/semi
- flowtype/space-after-type-colon
- flowtype/space-before-generic-bracket
- flowtype/space-before-type-colon
- flowtype/union-intersection-spacing
- func-call-spacing
- generator-star-spacing
- jsx-quotes
- new-parens
- no-extra-semi
- no-floating-decimal
- no-mixed-spaces-and-tabs
- no-trailing-spaces
- no-whitespace-before-property
- operator-linebreak
- react/jsx-closing-bracket-location
- react/jsx-equals-spacing
- react/jsx-first-prop-new-line
- react/jsx-indent
- react/jsx-indent-props
- react/jsx-tag-spacing
- react/jsx-wrap-multilines
- rest-spread-spacing
- semi
- semi-spacing
- semi-style
- space-before-blocks
- space-before-function-paren
- space-in-parens
- space-infix-ops
- switch-colon-spacing
- template-curly-spacing
- template-tag-spacing
- unicode-bom
- yield-star-spacing

The following rules are enabled but cannot be automatically checked. See:
https://github.com/prettier/eslint-config-prettier#special-rules

- no-unexpected-multiline
"
`;

exports[`doesn't conflict with Prettier: success 1`] = `false`;

exports[`lints with the web config: fixtures/all-00.js 1`] = `
Object {
  "errorCount": 1,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [
    Object {
      "column": 1,
      "fatal": true,
      "line": 11,
      "message": "Parsing error: Using the export keyword between a decorator and a class is not allowed. Please use \`export @dec class\` instead.

   9 | 
  10 | @d
> 11 | export class Example {
     | ^
  12 |   static s = {
  13 |     a, b
  14 |   };",
      "ruleId": null,
      "severity": 2,
    },
  ],
  "source": "import 'hi';

import a from 'a';
import { b } from 'b';
import c, { c1 } from 'c';
import * as d from 'd';

import e from './e';

@d
export class Example {
  static s = {
    a, b
  };

  m = {};

  hi() {
    _fn();
  }

  async byeAsync() {
    _fn(a, b, c, c1, d, e);
  }
}

function _fn() {}
",
  "warningCount": 0,
}
`;

exports[`lints with the web config: fixtures/web-native-00.js 1`] = `
Object {
  "errorCount": 1,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [
    Object {
      "column": 1,
      "fatal": true,
      "line": 6,
      "message": "Parsing error: Using the export keyword between a decorator and a class is not allowed. Please use \`export @dec class\` instead.

  4 | 
  5 | @connect()
> 6 | export default class Example extends React.Component {
    | ^
  7 |   state = {
  8 |     x: 'x',
  9 |     ...{",
      "ruleId": null,
      "severity": 2,
    },
  ],
  "source": "// @flow
import React from 'react';
import { connect } from 'react-redux';

@connect()
export default class Example extends React.Component {
  state = {
    x: 'x',
    ...{
      y: 'y',
    },
  };

  props: { x: string };

  static getInitialProps() {}

  constructor(props, context) {
    super(props, context);
    this.state = {
      ...this.state,
      x: props.x,
    };
  }

  componentDidMount() {
    fetch('http://example.com');
    new XMLHttpRequest().send();
    Uint16Array.from([1, 2, 3, 4, 5]);
    new SharedArrayBuffer(16).slice();
  }

  shouldComponentUpdate() {}

  render() {
    return (
      <div>
        {this.state.x}
      </div>
    );
  }

  _handleWhatever() {}
}
",
  "warningCount": 0,
}
`;

exports[`lints with the web config: fixtures/web-native-01.js 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [
    Object {
      "column": 5,
      "endColumn": 18,
      "endLine": 8,
      "line": 8,
      "message": "Do not use setState in componentDidMount",
      "nodeType": "MemberExpression",
      "ruleId": "react/no-did-mount-set-state",
      "severity": 1,
    },
  ],
  "output": "import React from 'react';

export default class Example extends React.Component {
  props = { x: 'x' }

  componentDidMount() {
    alert('uh oh');
    this.setState({});
  }

  render() {
    return <div >{this.props.x}</div>;
  }
}
",
  "warningCount": 1,
}
`;

exports[`lints with the web config: fixtures/web-native-02.js 1`] = `
Object {
  "errorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": Array [],
  "warningCount": 0,
}
`;
